{
 :deps
 {

  woof-core/woof-core        {:local/root "../woof-core"}

  ;; clojure deps
  org.clojure/clojure        {:mvn/version "1.10.1"}
  org.clojure/clojurescript  {:mvn/version "1.10.516"} ;;
  org.clojure/core.async     {:mvn/version "1.1.587"}

  ;; common
  fipp/fipp                  {:mvn/version "0.6.22"}
  clj-fuzzy/clj-fuzzy        {:mvn/version "0.4.1"}
  org.clojure/math.combinatorics {:mvn/version "0.1.6"}

  ;; backend web
  hiccup/hiccup              {:mvn/version "1.0.5"}
  http-kit/http-kit          {:mvn/version "2.3.0"},

  ring/ring                  {:mvn/version "1.8.0"}
  jumblerg/ring-cors         {:mvn/version "2.0.0"}

  compojure/compojure        {:mvn/version "1.6.1", :exclusions [commos-codec/commos-codec]},
  com.cognitect/transit-clj  {:mvn/version "0.8.313"},

  ;; backend other
  me.raynes/fs                {:mvn/version "1.4.6"},
  clojure-watch/clojure-watch {:mvn/version "LATEST"}

  ;; backend logging
  com.taoensso/timbre         {:mvn/version "4.10.0"}

  ;; frontend

  cljs-http/cljs-http                  {:mvn/version "0.1.46"}
  com.cognitect/transit-cljs {:mvn/version "0.8.256"},

  rum/rum                    {:mvn/version "0.12.3"},
  cljsjs/react-dom-server    {:mvn/version "16.6.0-0"}

  com.andrewmcveigh/cljs-time {:mvn/version "0.5.2"}

  }


 :aliases {

           :run    {:main-opts ["-m" "woof.server.core"]}

           :fig      {:extra-deps
                                   {com.bhauman/figwheel-main       {:mvn/version "0.2.9"},
                                    com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}}
                      :extra-paths ["target" "test"]
                      }


           :playground { :main-opts   ["-m" "figwheel.main" "-b" "playground" "-r"] }

           ;; browser extension
           :browser {
                     :jvm-opts ["-Dorg.eclipse.jetty.util.log.announce=false"]
                     ;; todo: maybe use more specific key instead of '--run-backend-wf'
                     ;; or implement dispatching by wf id
                     :main-opts   ["-m" "figwheel.main" "-b" "browser"
                                   "-r"  "--run-backend-wf"
                                   ;; todo: pass port here

                                   ] }

           :scraper {
                     :jvm-opts ["-Dorg.eclipse.jetty.util.log.announce=false"]
                     :main-opts   ["-m" "figwheel.main" "-b" "scraper"
                                   ;; run scraping session ws
                                   "-r"  "--run-backend-wf"
                                   ] }

           ;; this generates the code that can be run in browser
           :browser-min { :main-opts   ["-m" "figwheel.main" "-O" "advanced" "-b" "browser" ] }

           ;; not working yet
           :server {
                    :main-opts ["-i"
                                "src/woof/server/core.clj"
                                ;"scripts/server.clj"
                                "-r"  "--run-backend-wf"
                                ]
                    }
           ;; workaround around warning about using -M
           :build {
                   :main-opts  ["-m" "cljs.main"]
                   }
           }

 ;; setup some development paths
 :paths ["src" "resources" "test"
         ;"../woof-core/src"
         ]
 ;; setup target as a resource path
 :resource-paths ["target" "resources"]

 }
