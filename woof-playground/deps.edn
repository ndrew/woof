{:deps
 {
  woof-core {:local/root "../woof-core"}

  com.bhauman/figwheel-main {:mvn/version "0.2.0"}
  com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}

;  clj-async-test             {:mvn/version "0.0.5"},
;  clojurewerkz/propertied    {:mvn/version "1.3.0"},
;  com.cognitect/transit-clj  {:mvn/version "0.8.313"},
;  com.cognitect/transit-cljs {:mvn/version "0.8.256"},
;  compact-uuids              {:mvn/version "0.2.0"},

  hiccup                     {:mvn/version "1.0.5"}

  http-kit                   {:mvn/version "2.2.0"},
  compojure                  {:mvn/version "1.6.1", :exclusions [commos-codec]},
  com.cognitect/transit-clj  {:mvn/version "0.8.313"},
  com.cognitect/transit-cljs {:mvn/version "0.8.256"},
  ;[com.cognitect/transit-clj  "0.8.300"]
  ;[com.cognitect/transit-cljs "0.8.239"]

;  criterium                  {:mvn/version "0.4.4"},
;  fipp                       {:mvn/version "0.6.12"},
;  markdown-clj               {:mvn/version "1.0.2"},
;  hawk                       {:mvn/version "0.2.11"},
  me.raynes/fs               {:mvn/version "1.4.6"},
  org.clojure/clojure        {:mvn/version "1.10.0"},
  org.clojure/clojurescript  {:mvn/version "1.10.339"},
  org.clojure/core.async     {:mvn/version "0.3.443", :exclusions [org.clojure/tools.reader]}
;  org.clojure/data.json      {:mvn/version "0.2.6"},
  rum                        {:mvn/version "0.10.8"},
;  viz-cljc                   {:mvn/version "0.1.3"},
  devcards                   {:mvn/version "0.2.5"}

  com.taoensso/timbre         {:mvn/version "4.10.0"}
  clojure-watch               {:mvn/version "LATEST"}

  ;; cvs stuff
  semantic-csv               {:mvn/version "0.2.1-alpha1"}
  clojure-csv/clojure-csv    {:mvn/version "2.0.1"}
  }

 ;; setup some development paths
 :paths ["src" "target" "resources" "test"
         ;"../woof-core/src"
         ]
 ;; setup target as a resource path
 :resource-paths ["target" "resources"]

 ;; setup a helpful alias to start the build
 ;;  :aliases {:fig {:main-opts ["-m" "figwheel.main"]}}
 :aliases {

           :run        {:main-opts ["-m" "woof.server.core"]}

           :build-dev {
                       :main-opts [; run own server (for ws support)
                                   "-i" "scripts/server.clj"
                                   ; run figwheel
                                   "-m" "figwheel.main" "-b" "dev" "-r"]}
           ; :extra-paths ["test"]
           ; :extra-deps {woof-core {:local/root "../woof-core"}}

           ;; todo: dev-cards
           }
 }
